{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/layout/Layout\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport \"../styles/globals.css\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState(null);\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(0);\n  const {\n    0: JuroTokenContract,\n    1: setJuroTokenContract\n  } = useState(null);\n  const tokenOwner = '0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed';\n  const {\n    0: totalToken,\n    1: setTotalToken\n  } = useState(0);\n\n  const loadBlockChainData = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n      const web3 = new Web3(window.ethereum);\n      setWeb3(web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId);\n      const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n      setJuroTokenContract(juroToken);\n      console.log(JuroTokenContract);\n      window.ethereum.on('accountsChanged', function (accounts) {\n        setAccount(accounts[0]);\n        console.log(account);\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const loadTokenAmountData = async () => {\n    if (account && JuroTokenContract) {\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      console.log(amount);\n    }\n  };\n\n  const totalSupplyData = async () => {\n    if (JuroTokenContract) {\n      const totalSupply = await JuroTokenContract.methods.totalSupply().call();\n      setTotalToken(totalSupply);\n      console.log(totalToken);\n    }\n  };\n\n  useEffect(() => {\n    loadBlockChainData(), loadTokenAmountData(), totalSupplyData();\n  }, []);\n  useEffect(() => {\n    loadBlockChainData(), loadTokenAmountData(), totalSupplyData();\n  }, [account]);\n  useEffect(() => {\n    loadTokenAmountData();\n  }, [account, amount]);\n  useEffect(() => {\n    totalSupplyData();\n  }, [totalToken]);\n\n  const connectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      setAccount(accounts[0]);\n    }\n  };\n\n  const disconnectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [{\n          eth_accounts: {}\n        }]\n      }).then(() => ethereum.request({\n        method: 'eth_requestAccounts'\n      }));\n      setAccount(accounts[0]);\n    }\n  };\n\n  const buyHandler = async () => {\n    try {\n      console.log(account);\n      const getToken = await JuroTokenContract.methods.getToken().send({\n        from: account,\n        value: '1000000000000000'\n      });\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      console.log(getToken);\n    } catch (error) {\n      window.alert('Error occurred when buying');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    account: account,\n    login: connectHandler,\n    logout: disconnectHandler,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n      account: account,\n      amount: amount,\n      click: connectHandler,\n      buyclick: buyHandler,\n      contract: JuroTokenContract,\n      logout: disconnectHandler,\n      totalSupply: totalToken\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/_app.js"],"names":["Layout","useState","useEffect","Web3","JuroToken","MyApp","Component","pageProps","web3","setWeb3","account","setAccount","amount","setAmount","JuroTokenContract","setJuroTokenContract","tokenOwner","totalToken","setTotalToken","loadBlockChainData","window","ethereum","accounts","eth","getAccounts","console","log","length","networkId","net","getId","juroToken","Contract","abi","networks","address","on","chainId","location","reload","loadTokenAmountData","tokenAmount","methods","balanceOf","call","totalSupplyData","totalSupply","connectHandler","request","method","disconnectHandler","params","eth_accounts","then","buyHandler","getToken","send","from","value","error","alert"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout/Layout\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\n\n\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n\tconst [amount, setAmount] = useState(0)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const tokenOwner='0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed'\n  const [totalToken, setTotalToken]=useState(0)\n\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum!=='undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n      console.log(networkId)\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n      console.log(JuroTokenContract)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n        console.log(account)\n\t\t\t})\n      window.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  const loadTokenAmountData=async()=>{\n    if (account && JuroTokenContract){\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n      console.log(amount)\n\n    }\n  }\n  const totalSupplyData=async()=>{\n    if (JuroTokenContract){\n      const totalSupply=await JuroTokenContract.methods.totalSupply().call()\n      setTotalToken(totalSupply);\n      console.log(totalToken)\n      }\n    }\n\n  useEffect(()=>{\n    loadBlockChainData(),loadTokenAmountData(), totalSupplyData()\n  },[])\n\n\n  useEffect(()=>{\n    loadBlockChainData(),loadTokenAmountData(), totalSupplyData()\n  },[account,])\n\n\n  useEffect(()=>{\n    loadTokenAmountData()\n  },[account,amount])\n\n  useEffect(()=>{\n    totalSupplyData()\n  },[totalToken,])\n\n  \n  const connectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({method:'eth_requestAccounts'})\n    console.log(accounts)\n    setAccount(accounts[0])}\n  }\n\n  const disconnectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{eth_accounts: {}}]\n      \n  }).then(()=>ethereum.request({\n    method:'eth_requestAccounts'\n  }))\n\n    setAccount(accounts[0])}\n  }\n\n\n  const buyHandler = async () => {\n    try {\n      console.log(account)\n      const getToken=await JuroTokenContract.methods.getToken().send({ from:account, value:'1000000000000000'})\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n\n      console.log(getToken)\n  \n\n    } catch (error) {\n      window.alert('Error occurred when buying')\n    }\n  }\n  \n  return (\n    <Layout account={account} login={connectHandler} logout={disconnectHandler}>\n      <Component {...pageProps} account={account} amount={amount} click={connectHandler} buyclick={buyHandler} contract={JuroTokenContract} logout={disconnectHandler} totalSupply={totalToken}/>\n    </Layout>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}