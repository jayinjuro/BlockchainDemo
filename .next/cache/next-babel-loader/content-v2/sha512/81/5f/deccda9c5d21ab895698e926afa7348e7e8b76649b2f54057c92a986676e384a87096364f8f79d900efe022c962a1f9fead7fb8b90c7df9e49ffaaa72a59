{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\components\\\\Login\\\\CreateAccount.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef } from 'react';\nimport Card from '../ui/Card';\nimport classes from './CreateAccount.module.css';\nimport { Modal, Container, Row, Col, Button } from 'react-bootstrap';\nconst DUMMY_ID = [{\n  id: 1,\n  date: \"2022/07/11\",\n  name: \"SeoMinho\",\n  email: \"turtlemana@naver.com\",\n  password: \"skcjswo1@\"\n}];\nexport { DUMMY_ID };\nlet idCount = 1;\nlet dateTime = new Date().toString();\ndateTime = dateTime.substr(0, 24);\n\nfunction CreateAccount(props) {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    0: createEmailIsValid,\n    1: setCreateEmailIsValid\n  } = useState();\n  const {\n    0: createPasswordIsValid,\n    1: setCreatePasswordIsValid\n  } = useState();\n\n  function addAccount(enteredData) {\n    enteredData.id = enteredData.id + 1;\n    idCount = enteredData.id;\n    console.log(enteredData);\n    DUMMY_ID.push(enteredData);\n    console.log(DUMMY_ID);\n  }\n\n  function idCounter() {\n    idCount = idCount++;\n  }\n\n  function accountSubmitHandler(event) {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    function emailFinder() {\n      for (let i = 0; DUMMY_ID.length > i; i++) {\n        if (DUMMY_ID[i] == enteredEmail) {\n          return true;\n        }\n      }\n    }\n\n    if (enteredPassword.trim().length <= 6) {\n      alert(\"Invalid Password\");\n    } else if (DUMMY_ID.some(emailFinder)) {\n      alert(\"Account has already created\");\n    } else {\n      const accountData = {\n        id: idCount,\n        date: dateTime,\n        name: enteredName,\n        email: enteredEmail,\n        password: enteredPassword\n      };\n      addAccount(accountData);\n      props.createChange(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({}, props), {}, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      className: classes.ModalHeader,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"show-grid\",\n      className: classes.ModalBody,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: accountSubmitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                id: \"name\",\n                ref: nameInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                required: true,\n                id: \"email\",\n                ref: emailInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                required: true,\n                id: \"password\",\n                ref: passwordInputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.actions,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      className: classes.ModalFooter,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CreateAccount;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/components/Login/CreateAccount.js"],"names":["useState","useRef","Card","classes","Modal","Container","Row","Col","Button","DUMMY_ID","id","date","name","email","password","idCount","dateTime","Date","toString","substr","CreateAccount","props","nameInputRef","emailInputRef","passwordInputRef","createEmailIsValid","setCreateEmailIsValid","createPasswordIsValid","setCreatePasswordIsValid","addAccount","enteredData","console","log","push","idCounter","accountSubmitHandler","event","preventDefault","enteredName","current","value","enteredEmail","enteredPassword","emailFinder","i","length","trim","alert","some","accountData","createChange","ModalHeader","ModalBody","form","control","actions","ModalFooter","onHide"],"mappings":"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","sourcesContent":["import { useState,useRef } from 'react';\r\n\r\nimport Card from '../ui/Card';\r\nimport classes from './CreateAccount.module.css';\r\nimport {Modal,Container, Row, Col,Button} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst DUMMY_ID=[{\r\n    id:1,\r\n    date:\"2022/07/11\",\r\n    name:\"SeoMinho\",\r\n    email:\"turtlemana@naver.com\",\r\n    password:\"skcjswo1@\",\r\n    \r\n\r\n}]\r\n\r\nexport {DUMMY_ID}\r\n\r\n\r\nlet idCount=1\r\nlet dateTime=new Date().toString()\r\ndateTime=dateTime.substr(0,24)\r\n\r\n\r\nfunction CreateAccount(props) {\r\n  const nameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const [createEmailIsValid, setCreateEmailIsValid]=useState()\r\n  const [createPasswordIsValid, setCreatePasswordIsValid]=useState()\r\n\r\n\r\n\r\n  function addAccount(enteredData) {\r\n    enteredData.id=enteredData.id+1\r\n    idCount=enteredData.id\r\n    console.log(enteredData);\r\n    DUMMY_ID.push(enteredData)\r\n    console.log(DUMMY_ID)\r\n\r\n  }\r\n\r\n  function idCounter(){\r\n    idCount=idCount++;\r\n  }\r\n\r\n\r\n  function accountSubmitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    function emailFinder(){\r\n        for (let i=0;DUMMY_ID.length>i;i++){\r\n            if(DUMMY_ID[i]==enteredEmail){\r\n                return true\r\n            }\r\n        }\r\n      }\r\n    \r\n\r\n\r\n    if (enteredPassword.trim().length<=6){\r\n        alert(\"Invalid Password\")\r\n    } else if(DUMMY_ID.some(emailFinder)){\r\n        alert(\"Account has already created\")\r\n    } else{\r\n\r\n\r\n      \r\n\r\n        const accountData = {\r\n        id:idCount,\r\n        date:dateTime,\r\n        name: enteredName,\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        };\r\n\r\n\r\n\r\n        addAccount(accountData);\r\n        props.createChange(false);}\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n    <Modal.Header closeButton className={classes.ModalHeader}>\r\n      <Modal.Title id=\"contained-modal-title-vcenter\">\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body className=\"show-grid\" className={classes.ModalBody}>\r\n      <Container fluid>\r\n    <Card>\r\n      <form className={classes.form} onSubmit={accountSubmitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='name'>Name</label>\r\n          <input type='text' required id='name' ref={nameInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Email</label>\r\n          <input type=\"email\" required id='email' ref={emailInputRef}/>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Password</label>\r\n          <input type=\"password\" required id='password' ref={passwordInputRef}/>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>Create Account</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n    </Container>\r\n    </Modal.Body>\r\n    <Modal.Footer className={classes.ModalFooter}>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}