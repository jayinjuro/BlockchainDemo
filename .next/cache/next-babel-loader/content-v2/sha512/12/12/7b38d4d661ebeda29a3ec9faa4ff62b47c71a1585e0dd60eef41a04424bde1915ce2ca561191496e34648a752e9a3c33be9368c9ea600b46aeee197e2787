{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\components\\\\SendTransaction.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Button, Card, ListGroup, ListGroupItem, Col, Row, Form, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classes from \"./SendTransaction.module.css\";\nimport DropdownButton from 'react-bootstrap';\n\nfunction SendTransaction(props) {\n  _s();\n\n  var _useState = useState(),\n      enteredAddr = _useState[0],\n      setEnteredAddr = _useState[1];\n\n  var _useState2 = useState(),\n      enteredAmount = _useState2[0],\n      setEnteredAmount = _useState2[1];\n\n  var _useState3 = useState(),\n      selectedToken = _useState3[0],\n      setSelectedToken = _useState3[1];\n\n  var addrInputHandler = function addrInputHandler(_ref) {\n    var value = _ref.target.value;\n    setEnteredAddr(value);\n  };\n\n  var amountInputHandler = function amountInputHandler(_ref2) {\n    var value = _ref2.target.value;\n    setEnteredAmount(value);\n  };\n\n  var selectTokenHandler = function selectTokenHandler(_ref3) {\n    var value = _ref3.target.value;\n    setSelectedToken(value);\n    console.log(selectedToken);\n  };\n\n  function Transaction() {\n    return _Transaction.apply(this, arguments);\n  }\n\n  function _Transaction() {\n    _Transaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx, tokenAmount;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return props.contract.methods.transfer(enteredAddr, enteredAmount).send({\n                from: props.account\n              });\n\n            case 3:\n              tx = _context.sent;\n              console.log(tx);\n              _context.next = 7;\n              return props.contract.methods.balanceOf(props.account).call();\n\n            case 7:\n              tokenAmount = _context.sent;\n              props.amountChange(tokenAmount);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Something went wrong \".concat(_context.t0));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n    return _Transaction.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.SendTransaction,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: \"Dropdown Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        onChange: selectTokenHandler,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#/action-1\",\n          children: props.tokenName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#/action-2\",\n          children: props.tokenName2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#/action-3\",\n          children: props.tokenName3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: '44rem'\n      },\n      className: \"mb-5 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTokenTx\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.sendText,\n            children: \"Send your token to other address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Account\",\n          onChange: addrInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter Amount of token you want to send\",\n          onChange: amountInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"mt-2\",\n        onClick: Transaction,\n        children: \"Send Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SendTransaction, \"t5KUpCdLQ3If6uRvHxGMXjA7y7A=\");\n\n_c = SendTransaction;\nexport default SendTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTransaction\");","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/components/SendTransaction.js"],"names":["useState","useEffect","Button","Card","ListGroup","ListGroupItem","Col","Row","Form","Dropdown","classes","DropdownButton","SendTransaction","props","enteredAddr","setEnteredAddr","enteredAmount","setEnteredAmount","selectedToken","setSelectedToken","addrInputHandler","value","target","amountInputHandler","selectTokenHandler","console","log","Transaction","contract","methods","transfer","send","from","account","tx","balanceOf","call","tokenAmount","amountChange","tokenName","tokenName2","tokenName3","width","sendText"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport { Button, Card, ListGroup, ListGroupItem,Col,Row,Form,Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./SendTransaction.module.css\";\r\nimport DropdownButton from 'react-bootstrap';\r\n\r\n\r\nfunction SendTransaction(props){\r\n    const [enteredAddr,setEnteredAddr]=useState();\r\n    const [enteredAmount, setEnteredAmount]=useState();\r\n    const [selectedToken, setSelectedToken]=useState();\r\n\r\n\r\n    const addrInputHandler= ({ target: { value } }) => {\r\n        setEnteredAddr(value);\r\n    }\r\n\r\n    const amountInputHandler= ({ target: { value } }) => {\r\n        setEnteredAmount(value);\r\n    }\r\n    const selectTokenHandler= ({ target: { value } }) => {\r\n        setSelectedToken(value);\r\n        console.log(selectedToken)\r\n    }\r\n\r\n    async function Transaction(){\r\n        try{\r\n            const tx= await props.contract.methods.transfer(enteredAddr,enteredAmount).send({from:props.account})\r\n            console.log(tx)\r\n            const tokenAmount=await props.contract.methods.balanceOf(props.account).call()\r\n            props.amountChange(tokenAmount)\r\n\r\n        } catch(err){\r\n            console.log(`Something went wrong ${err}`)\r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    return <div className={classes.SendTransaction}>\r\n        <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            Dropdown Button\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu onChange={selectTokenHandler}>\r\n            <Dropdown.Item href=\"#/action-1\">{props.tokenName}</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-2\">{props.tokenName2}</Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-3\">{props.tokenName3}</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Form style={{ width: '44rem' }} className=\"mb-5 mt-5\">\r\n            <Form.Group controlId=\"formTokenTx\">\r\n                <Form.Label><h1 className={classes.sendText}>Send your token to other address</h1></Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Account\" onChange={addrInputHandler}></Form.Control>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Amount of token you want to send\" onChange={amountInputHandler}></Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"dark\" className=\"mt-2\" onClick={Transaction}>Send Token</Button>\r\n        </Form>\r\n    </div>\r\n}\r\n\r\nexport default SendTransaction"]},"metadata":{},"sourceType":"module"}