{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\index.js\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nfunction HomePage(props) {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState(null);\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: JuroTokenContract,\n    1: setJuroTokenContract\n  } = useState(null);\n  const provider = detectEthereumProvider();\n  const eb3 = new Web3(provider);\n  setWeb3(eb3);\n  const accounts = web3.eth.getAccounts();\n  console.log(accounts);\n\n  const loadBlockChainData = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const web3 = new Web3(window.ethereum);\n      setWeb3(web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n\n      const networkId = await web3.eth.net.getId();\n      const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n      setJuroTokenContract(juroToken);\n      window.ethereum.on('accountsChanged', function (accounts) {\n        setAccount(accounts[0]);\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload();\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadBlockChainData;\n  }, [account]);\n  console.log(account);\n  console.log(JuroTokenContract);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/index.js"],"names":["useState","useEffect","Jumbotron","FooterPage","Item","Web3","JuroToken","detectEthereumProvider","HomePage","props","web3","setWeb3","account","setAccount","JuroTokenContract","setJuroTokenContract","provider","eb3","accounts","eth","getAccounts","console","log","loadBlockChainData","window","ethereum","length","networkId","net","getId","juroToken","Contract","abi","networks","address","on","chainId","location","reload"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACD,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACC,QAAM;AAAA,OAACc,iBAAD;AAAA,OAAoBC;AAApB,MAA4Cf,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAMgB,QAAQ,GAACT,sBAAsB,EAArC;AACA,QAAMU,GAAG,GAAG,IAAIZ,IAAJ,CAASW,QAAT,CAAZ;AACAL,EAAAA,OAAO,CAACM,GAAD,CAAP;AACA,QAAMC,QAAQ,GAAGR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AAEA,QAAMK,kBAAkB,GAAC,YAAS;AAChC,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC7C,YAAMf,IAAI,GAAG,IAAIL,IAAJ,CAASmB,MAAM,CAACC,QAAhB,CAAb;AACAd,MAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,YAAMQ,QAAQ,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAvB;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AAEH,UAAIA,QAAQ,CAACQ,MAAT,GAAkB,CAAtB,EAAyB;AACxBb,QAAAA,UAAU,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA;;AAED,YAAMS,SAAS,GAAG,MAAMjB,IAAI,CAACS,GAAL,CAASS,GAAT,CAAaC,KAAb,EAAxB;AAEA,YAAMC,SAAS,GAAG,IAAIpB,IAAI,CAACS,GAAL,CAASY,QAAb,CAAsBzB,SAAS,CAAC0B,GAAhC,EAAqC1B,SAAS,CAAC2B,QAAV,CAAmBN,SAAnB,EAA8BO,OAAnE,CAAlB;AACAnB,MAAAA,oBAAoB,CAACe,SAAD,CAApB;AAEGN,MAAAA,MAAM,CAACC,QAAP,CAAgBU,EAAhB,CAAmB,iBAAnB,EAAsC,UAAUjB,QAAV,EAAoB;AAC5DL,QAAAA,UAAU,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA,OAFE;AAIHM,MAAAA,MAAM,CAACC,QAAP,CAAgBU,EAAhB,CAAmB,cAAnB,EAAoCC,OAAD,IAAa;AAC/CZ,QAAAA,MAAM,CAACa,QAAP,CAAgBC,MAAhB;AACA,OAFD;AAGE;AACF,GAzBD;;AA2BArC,EAAAA,SAAS,CAAC,MAAI;AACZsB,IAAAA,kBAAkB;AACnB,GAFQ,EAEP,CAACX,OAAD,CAFO,CAAT;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAZ;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,eAAeN,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nfunction HomePage(props) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const provider=detectEthereumProvider();\n  const eb3 = new Web3(provider)\n  setWeb3(eb3)\n  const accounts = web3.eth.getAccounts()\n  console.log(accounts)\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum !== 'undefined') {\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t})\n\n\t\t\twindow.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  useEffect(()=>{\n    loadBlockChainData\n  },[account])\n  console.log(account)\n  console.log(JuroTokenContract)\n  return (\n    <div>\n      <Jumbotron></Jumbotron>\n      <Item />\n      <FooterPage></FooterPage>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}