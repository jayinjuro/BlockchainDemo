{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport contract from \"@truffle/contract\";\nexport var loadContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, provider) {\n    var res, Artifact, _contract, deployedContract;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"../build/contracts/\".concat(name, \".json\"));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            Artifact = _context.sent;\n            _contract = contract(Artifact);\n\n            _contract.setProvider(provider);\n\n            deployedContract = null;\n            _context.prev = 9;\n            _context.next = 12;\n            return _contract.deployed();\n\n          case 12:\n            deployedContract = _context.sent;\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](9);\n            console.error(\"You are connected to the wrong network\");\n\n          case 18:\n            return _context.abrupt(\"return\", deployedContract);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 15]]);\n  }));\n\n  return function loadContract(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/utils/loadcontract.js"],"names":["contract","loadContract","name","provider","fetch","res","json","Artifact","_contract","setProvider","deployedContract","deployed","console","error"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,QAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,KAAK,8BAAuBF,IAAvB,WADG;;AAAA;AACpBG,YAAAA,GADoB;AAAA;AAAA,mBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEpBC,YAAAA,QAFoB;AAIpBC,YAAAA,SAJoB,GAIRR,QAAQ,CAACO,QAAD,CAJA;;AAK1BC,YAAAA,SAAS,CAACC,WAAV,CAAsBN,QAAtB;;AAEIO,YAAAA,gBAPsB,GAOH,IAPG;AAAA;AAAA;AAAA,mBASCF,SAAS,CAACG,QAAV,EATD;;AAAA;AASxBD,YAAAA,gBATwB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWxBE,YAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd;;AAXwB;AAAA,6CAcnBH,gBAdmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZT,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import contract from \"@truffle/contract\"\r\n\r\nexport const loadContract = async (name, provider) => {\r\n  const res = await fetch(`../build/contracts/${name}.json`)\r\n  const Artifact = await res.json()\r\n\r\n  const _contract = contract(Artifact)\r\n  _contract.setProvider(provider)\r\n\r\n  let deployedContract = null\r\n  try {\r\n    deployedContract = await _contract.deployed()\r\n  } catch {\r\n    console.error(\"You are connected to the wrong network\")\r\n  }\r\n\r\n  return deployedContract\r\n}"]},"metadata":{},"sourceType":"module"}