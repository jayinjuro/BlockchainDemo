{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\components\\\\Login\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './Login.module.css';\nimport { Modal, Button, Container } from 'react-bootstrap';\n\nconst Login = props => {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState('');\n  const {\n    0: emailIsValid,\n    1: setEmailIsValid\n  } = useState();\n  const {\n    0: enteredPassword,\n    1: setEnteredPassword\n  } = useState('');\n  const {\n    0: passwordIsValid,\n    1: setPasswordIsValid\n  } = useState();\n  const {\n    0: formIsValid,\n    1: setFormIsValid\n  } = useState(false);\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({}, props), {}, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      className: classes.ModalHeader,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"show-grid\",\n      className: classes.ModalBody,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.login,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"E-Mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: enteredEmail,\n                onChange: emailChangeHandler,\n                onBlur: validateEmailHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                value: enteredPassword,\n                onChange: passwordChangeHandler,\n                onBlur: validatePasswordHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.actions,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: classes.btn,\n                disabled: !formIsValid,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      className: classes.ModalFooter,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/components/Login/Login.js"],"names":["React","useState","useEffect","Card","classes","Modal","Button","Container","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","console","log","identifier","setTimeout","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","ModalHeader","ModalBody","login","control","invalid","actions","btn","ModalFooter","onHide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Card from '../ui/Card';\r\nimport classes from './Login.module.css';\r\nimport {Modal,Button,Container} from 'react-bootstrap';\r\n\r\nconst Login = (props) => {\r\n  const [enteredEmail, setEnteredEmail] = useState('');\r\n  const [emailIsValid, setEmailIsValid] = useState();\r\n  const [enteredPassword, setEnteredPassword] = useState('');\r\n  const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('EFFECT RUNNING');\r\n\r\n    return () => {\r\n      console.log('EFFECT CLEANUP');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      console.log('Checking form validity!');\r\n      setFormIsValid(\r\n        enteredEmail.includes('@') && enteredPassword.trim().length > 6\r\n      );\r\n    }, 500);\r\n\r\n    return () => {\r\n      console.log('CLEANUP');\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [enteredEmail, enteredPassword]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    setEmailIsValid(enteredEmail.includes('@'));\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    setPasswordIsValid(enteredPassword.trim().length > 6);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onLogin(enteredEmail, enteredPassword);\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton className={classes.ModalHeader}>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\" className={classes.ModalBody}>\r\n    <Container fluid>\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${\r\n            emailIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={enteredEmail}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${\r\n            passwordIsValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={enteredPassword}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n    </Container>\r\n    </Modal.Body>\r\n    <Modal.Footer className={classes.ModalFooter}>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}