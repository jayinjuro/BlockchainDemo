{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/layout/Layout\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport UroSysToken from '../build/contracts/UroSysToken.json';\nimport RiskWeatherToken from '../build/contracts/RiskWeatherToken.json';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport MyModal from '../components/layout/MyModal';\nimport Login from \"../components/Login/Login\";\nimport CreateAccount from \"../components/Login/CreateAccount\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState(null);\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(0);\n  const {\n    0: uroSysAmount,\n    1: setUroSysAmount\n  } = useState(0);\n  const {\n    0: riskWeatherAmount,\n    1: setRiskWeatherAmount\n  } = useState(0);\n  const {\n    0: JuroTokenContract,\n    1: setJuroTokenContract\n  } = useState(null);\n  const {\n    0: uroSysTokenContract,\n    1: setUroSysTokenContract\n  } = useState(null);\n  const {\n    0: riskWeatherTokenContract,\n    1: setRiskWeatherTokenContract\n  } = useState(null);\n  const tokenOwner = '0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed';\n  const {\n    0: totalToken,\n    1: setTotalToken\n  } = useState(0);\n  const {\n    0: uroTotalToken,\n    1: setUroTotalToken\n  } = useState(0);\n  const {\n    0: riskTotalToken,\n    1: setRiskTotalToken\n  } = useState(0);\n  const {\n    0: modalShow,\n    1: setModalShow\n  } = useState(false);\n  const {\n    0: uroModalShow,\n    1: setUroModalShow\n  } = useState(false);\n  const {\n    0: riskModalShow,\n    1: setRiskModalShow\n  } = useState(false);\n  const {\n    0: tokenName,\n    1: setTokenName\n  } = useState(\"\");\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    0: loginShow,\n    1: setLoginShow\n  } = useState(false);\n  const {\n    0: createShow,\n    1: setCreateShow\n  } = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n    setLoginShow(false);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  function getLibrary(provider) {\n    return new Web3(provider);\n  }\n\n  const loadBlockChainData = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n      const web3 = new Web3(window.ethereum);\n      setWeb3(web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId);\n      const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n      const uroSysToken = new web3.eth.Contract(UroSysToken.abi, UroSysToken.networks[networkId].address);\n      const riskWeatherToken = new web3.eth.Contract(RiskWeatherToken.abi, RiskWeatherToken.networks[networkId].address);\n      setJuroTokenContract(juroToken);\n      setUroSysTokenContract(uroSysToken);\n      setRiskWeatherTokenContract(riskWeatherToken);\n      console.log(JuroTokenContract);\n      console.log(uroSysTokenContract);\n      console.log(riskWeatherTokenContract);\n      window.ethereum.on('accountsChanged', function (accounts) {\n        setAccount(accounts[0]);\n        console.log(account);\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const loadTokenAmountData = async () => {\n    if (account && JuroTokenContract && uroSysTokenContract && riskWeatherTokenContract) {\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      const tokenAmount2 = await uroSysTokenContract.methods.balanceOf(account).call();\n      const tokenAmount3 = await riskWeatherTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      setUroSysAmount(tokenAmount2);\n      setRiskWeatherAmount(tokenAmount3);\n      console.log(amount);\n      console.log(tokenAmount2);\n      console.log(tokenAmount3);\n    }\n  };\n\n  const totalSupplyData = async () => {\n    const web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const networkId = await web3.eth.net.getId();\n    const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n    setJuroTokenContract(juroToken);\n    const uroToken = new web3.eth.Contract(UroSysToken.abi, UroSysToken.networks[networkId].address);\n    setUroSysTokenContract(uroToken);\n    const riskToken = new web3.eth.Contract(RiskWeatherToken.abi, RiskWeatherToken.networks[networkId].address);\n    setRiskWeatherTokenContract(riskToken);\n\n    if (JuroTokenContract) {\n      const totalSupply = await JuroTokenContract.methods.totalSupply().call();\n      setTotalToken(totalSupply);\n      console.log(totalToken);\n    }\n\n    if (uroSysTokenContract) {\n      const uroTotalSupply = await uroSysTokenContract.methods.totalSupply().call();\n      setUroTotalToken(uroTotalSupply);\n    }\n\n    if (riskWeatherTokenContract) {\n      const riskWeatherTotalSupply = await riskWeatherTokenContract.methods.totalSupply().call();\n      setRiskTotalToken(riskWeatherTotalSupply);\n    }\n  };\n\n  const getTokenName = async () => {\n    if (JuroTokenContract) {\n      const tokName = await JuroTokenContract.methods.name().call();\n      setTokenName(tokName);\n    }\n  };\n\n  useEffect(() => {\n    totalSupplyData(), getTokenName();\n  }, []);\n  useEffect(() => {\n    loadBlockChainData(), loadTokenAmountData(), getTokenName(), totalSupplyData();\n  }, [account]);\n  useEffect(() => {\n    loadTokenAmountData();\n  }, [account, amount]);\n  useEffect(() => {\n    totalSupplyData();\n  }, [totalToken]);\n\n  const connectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      setAccount(accounts[0]);\n    }\n  };\n\n  const disconnectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [{\n          eth_accounts: {}\n        }]\n      }).then(() => ethereum.request({\n        method: 'eth_requestAccounts'\n      }));\n      setAccount(accounts[0]);\n    }\n  };\n\n  const buyHandler = async () => {\n    try {\n      console.log(account);\n      const getToken = await JuroTokenContract.methods.getToken().send({\n        from: account,\n        value: '1000000000000000'\n      });\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      console.log(getToken);\n    } catch (error) {\n      window.alert('Error occurred when buying');\n    }\n  };\n\n  function modalShowHandler() {\n    setModalShow(true);\n  }\n\n  function modalHideHandler() {\n    setModalShow(false);\n  }\n\n  function loginShowHandler() {\n    setLoginShow(true);\n  }\n\n  function logoutShowHandler() {\n    setLoginShow(false);\n  }\n\n  function createAccountHandler() {\n    setCreateShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      createClick: createAccountHandler,\n      loginClick: loginShowHandler,\n      logoutClick: logoutShowHandler,\n      account: account,\n      login: connectHandler,\n      logout: disconnectHandler,\n      isAuthenticated: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n        amountChange: setAmount,\n        account: account,\n        amount: amount,\n        click: connectHandler,\n        buyclick: buyHandler,\n        contract: JuroTokenContract,\n        logout: disconnectHandler,\n        totalsupply: totalToken,\n        onHide: modalHideHandler,\n        modalClick: modalShowHandler,\n        tokenName: tokenName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      totalsupply: totalToken,\n      isLoggedIn: isLoggedIn,\n      loginShow: loginShowHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: uroModalShow,\n      onHide: () => setUroModalShow(false),\n      totalsupply: uroTotalToken,\n      isLoggedIn: isLoggedIn,\n      loginShow: loginShowHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: riskModalShow,\n      onHide: () => setRiskModalShow(false),\n      totalsupply: riskTotalToken,\n      isLoggedIn: isLoggedIn,\n      loginShow: loginShowHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      show: loginShow,\n      onHide: () => setLoginShow(false),\n      isLoggedIn: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CreateAccount, {\n      show: createShow,\n      onHide: () => setCreateShow(false),\n      onCreate: createAccountHandler,\n      createchange: setCreateShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/_app.js"],"names":["Layout","React","useState","useEffect","useCallback","Web3","JuroToken","UroSysToken","RiskWeatherToken","Web3ReactProvider","MyModal","Login","CreateAccount","MyApp","Component","pageProps","web3","setWeb3","account","setAccount","amount","setAmount","uroSysAmount","setUroSysAmount","riskWeatherAmount","setRiskWeatherAmount","JuroTokenContract","setJuroTokenContract","uroSysTokenContract","setUroSysTokenContract","riskWeatherTokenContract","setRiskWeatherTokenContract","tokenOwner","totalToken","setTotalToken","uroTotalToken","setUroTotalToken","riskTotalToken","setRiskTotalToken","modalShow","setModalShow","uroModalShow","setUroModalShow","riskModalShow","setRiskModalShow","tokenName","setTokenName","isLoggedIn","setIsLoggedIn","loginShow","setLoginShow","createShow","setCreateShow","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","getLibrary","provider","loadBlockChainData","window","ethereum","accounts","eth","getAccounts","console","log","length","networkId","net","getId","juroToken","Contract","abi","networks","address","uroSysToken","riskWeatherToken","on","chainId","location","reload","loadTokenAmountData","tokenAmount","methods","balanceOf","call","tokenAmount2","tokenAmount3","totalSupplyData","uroToken","riskToken","totalSupply","uroTotalSupply","riskWeatherTotalSupply","getTokenName","tokName","name","connectHandler","request","method","disconnectHandler","params","eth_accounts","then","buyHandler","getToken","send","from","value","error","alert","modalShowHandler","modalHideHandler","loginShowHandler","logoutShowHandler","createAccountHandler"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout/Layout\";\nimport React,{ useState, useEffect,useCallback } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport UroSysToken from '../build/contracts/UroSysToken.json'\nimport RiskWeatherToken from '../build/contracts/RiskWeatherToken.json'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport MyModal from '../components/layout/MyModal';\nimport Login from \"../components/Login/Login\";\nimport CreateAccount from \"../components/Login/CreateAccount\";\n\n\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n\tconst [amount, setAmount] = useState(0)\n\tconst [uroSysAmount, setUroSysAmount] = useState(0)\n\tconst [riskWeatherAmount, setRiskWeatherAmount] = useState(0)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const [uroSysTokenContract, setUroSysTokenContract] = useState(null)\n  const [riskWeatherTokenContract, setRiskWeatherTokenContract] = useState(null)\n  const tokenOwner='0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed'\n  const [totalToken, setTotalToken]=useState(0)\n  const [uroTotalToken, setUroTotalToken]=useState(0)\n  const [riskTotalToken, setRiskTotalToken]=useState(0)\n  const [modalShow, setModalShow] = useState(false);\n  const [uroModalShow, setUroModalShow] = useState(false);\n  const [riskModalShow, setRiskModalShow] = useState(false);\n  const [tokenName,setTokenName]=useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginShow, setLoginShow]=useState(false);\n  const [createShow, setCreateShow]=useState(false);\n\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n    setLoginShow(false);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  function getLibrary(provider) {\n    return new Web3(provider)\n  }\n\n \n\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum!=='undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n      console.log(networkId)\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tconst uroSysToken = new web3.eth.Contract(UroSysToken.abi, UroSysToken.networks[networkId].address)\n\t\t\tconst riskWeatherToken = new web3.eth.Contract(RiskWeatherToken.abi, RiskWeatherToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n\t\t\tsetUroSysTokenContract(uroSysToken)\n\t\t\tsetRiskWeatherTokenContract(riskWeatherToken)\n      console.log(JuroTokenContract)\n      console.log(uroSysTokenContract)\n      console.log(riskWeatherTokenContract)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n        console.log(account)\n\t\t\t})\n      window.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  const loadTokenAmountData=async()=>{\n    if (account&&JuroTokenContract&&uroSysTokenContract&&riskWeatherTokenContract){\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      const tokenAmount2=await uroSysTokenContract.methods.balanceOf(account).call()\n      const tokenAmount3=await riskWeatherTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n      setUroSysAmount(tokenAmount2)\n      setRiskWeatherAmount(tokenAmount3)\n      console.log(amount)\n      console.log(tokenAmount2)\n      console.log(tokenAmount3)\n\n    }\n  }\n  const totalSupplyData=async()=>{\n    const web3 = new Web3(window.ethereum)\n    setWeb3(web3)\n    const networkId = await web3.eth.net.getId()\n    const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n    setJuroTokenContract(juroToken)\n    const uroToken = new web3.eth.Contract(UroSysToken.abi, UroSysToken.networks[networkId].address)\n    setUroSysTokenContract(uroToken)\n    const riskToken = new web3.eth.Contract(RiskWeatherToken.abi, RiskWeatherToken.networks[networkId].address)\n    setRiskWeatherTokenContract(riskToken)\n    if (JuroTokenContract){\n      const totalSupply=await JuroTokenContract.methods.totalSupply().call()\n      setTotalToken(totalSupply);\n      console.log(totalToken)\n      }\n    if (uroSysTokenContract){\n      const uroTotalSupply=await uroSysTokenContract.methods.totalSupply().call()\n      setUroTotalToken(uroTotalSupply)\n    }\n    if (riskWeatherTokenContract){\n      const riskWeatherTotalSupply=await riskWeatherTokenContract.methods.totalSupply().call()\n      setRiskTotalToken(riskWeatherTotalSupply)\n    }\n    }\n\n    const getTokenName=async()=>{\n      if (JuroTokenContract){\n        const tokName=await JuroTokenContract.methods.name().call()\n        setTokenName(tokName);\n      }\n    }\n\n  useEffect(()=>{\n    totalSupplyData(),getTokenName()\n  },[])\n\n\n  useEffect(()=>{\n    loadBlockChainData(),loadTokenAmountData(),getTokenName(),totalSupplyData()\n  },[account])\n\n\n  useEffect(()=>{\n    loadTokenAmountData()\n  },[account,amount])\n\n  useEffect(()=>{\n    totalSupplyData()\n  },[totalToken])\n\n  \n  const connectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({method:'eth_requestAccounts'})\n    console.log(accounts)\n    setAccount(accounts[0])}\n  }\n\n  const disconnectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{eth_accounts: {}}]\n      \n  }).then(()=>ethereum.request({\n    method:'eth_requestAccounts'\n  }))\n\n    setAccount(accounts[0])}\n  }\n\n\n  const buyHandler = async () => {\n    try {\n      console.log(account)\n      const getToken=await JuroTokenContract.methods.getToken().send({ from:account, value:'1000000000000000'})\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n\n      console.log(getToken)\n  \n\n    } catch (error) {\n      window.alert('Error occurred when buying')\n    }\n  }\n\n  function modalShowHandler(){\n    setModalShow(true);\n  }\n  function modalHideHandler(){\n    setModalShow(false);\n  }\n\n  function loginShowHandler(){\n    setLoginShow(true);}\n  function logoutShowHandler(){\n    setLoginShow(false);}\n\n  function createAccountHandler(){\n    setCreateShow(true);\n  }\n\n  \n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n    <Layout createClick={createAccountHandler} loginClick={loginShowHandler} logoutClick={logoutShowHandler} account={account} login={connectHandler} logout={disconnectHandler} isAuthenticated={isLoggedIn} onLogin={loginHandler} onLogout={logoutHandler}>\n      <Component {...pageProps}  amountChange={setAmount} account={account} amount={amount} click={connectHandler} buyclick={buyHandler} contract={JuroTokenContract} logout={disconnectHandler} totalsupply={totalToken} onHide={modalHideHandler} modalClick={modalShowHandler} tokenName={tokenName}/>\n    </Layout>\n    <MyModal show={modalShow} onHide={() => setModalShow(false)} totalsupply={totalToken} isLoggedIn={isLoggedIn} loginShow={loginShowHandler}/>\n    <MyModal show={uroModalShow} onHide={() => setUroModalShow(false)} totalsupply={uroTotalToken} isLoggedIn={isLoggedIn} loginShow={loginShowHandler}/>\n    <MyModal show={riskModalShow} onHide={() => setRiskModalShow(false)} totalsupply={riskTotalToken} isLoggedIn={isLoggedIn} loginShow={loginShowHandler}/>\n    <Login show={loginShow} onHide={() => setLoginShow(false)} isLoggedIn={isLoggedIn} onLogin={loginHandler} onLogout={logoutHandler}/>\n    <CreateAccount show={createShow} onHide={() => setCreateShow(false)}  onCreate={createAccountHandler} createchange={setCreateShow}/>\n    </Web3ReactProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}