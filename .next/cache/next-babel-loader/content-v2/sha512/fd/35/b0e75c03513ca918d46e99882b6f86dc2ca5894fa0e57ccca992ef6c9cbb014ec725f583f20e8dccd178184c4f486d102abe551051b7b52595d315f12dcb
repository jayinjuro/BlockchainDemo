{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nfunction HomePage(props) {\n  _s();\n\n  var _useState = useState(null),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(null),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(null),\n      JuroTokenContract = _useState3[0],\n      setJuroTokenContract = _useState3[1];\n\n  var provider = detectEthereumProvider();\n\n  var loadBlockChainData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _web, accounts, networkId, juroToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!provider) {\n                _context.next = 15;\n                break;\n              }\n\n              _web = new Web3(window.ethereum);\n              setWeb3(_web);\n              _context.next = 5;\n              return _web.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              console.log(accounts);\n\n              if (accounts.length > 0) {\n                setAccount(accounts[0]);\n              }\n\n              _context.next = 10;\n              return _web.eth.net.getId();\n\n            case 10:\n              networkId = _context.sent;\n              juroToken = new _web.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n              setJuroTokenContract(juroToken);\n              provider.on('accountsChanged', function (accounts) {\n                setAccount(accounts[0]);\n              });\n              provider.on('chainChanged', function (chainId) {\n                window.location.reload();\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadBlockChainData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadBlockChainData;\n  }, [account]);\n  console.log(account);\n  console.log(JuroTokenContract);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"YQRDFBVPHg7vyq+Hc/FWvg+o9ME=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/index.js"],"names":["useState","useEffect","Jumbotron","FooterPage","Item","Web3","JuroToken","detectEthereumProvider","HomePage","props","web3","setWeb3","account","setAccount","JuroTokenContract","setJuroTokenContract","provider","loadBlockChainData","window","ethereum","eth","getAccounts","accounts","console","log","length","net","getId","networkId","juroToken","Contract","abi","networks","address","on","chainId","location","reload"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,kBACCT,QAAQ,CAAC,IAAD,CADT;AAAA,MAChBU,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEMX,QAAQ,CAAC,IAAD,CAFd;AAAA,MAEjBY,OAFiB;AAAA,MAERC,UAFQ;;AAAA,mBAG2Bb,QAAQ,CAAC,IAAD,CAHnC;AAAA,MAGhBc,iBAHgB;AAAA,MAGGC,oBAHH;;AAIvB,MAAMC,QAAQ,GAACT,sBAAsB,EAArC;;AAGA,MAAMU,kBAAkB;AAAA,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACnBD,QADmB;AAAA;AAAA;AAAA;;AAElBN,cAAAA,IAFkB,GAEX,IAAIL,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAFW;AAGxBR,cAAAA,OAAO,CAACD,IAAD,CAAP;AAHwB;AAAA,qBAKDA,IAAI,CAACU,GAAL,CAASC,WAAT,EALC;;AAAA;AAKlBC,cAAAA,QALkB;AAMrBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEH,kBAAIA,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACxBZ,gBAAAA,UAAU,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA;;AAVuB;AAAA,qBAYAZ,IAAI,CAACU,GAAL,CAASM,GAAT,CAAaC,KAAb,EAZA;;AAAA;AAYlBC,cAAAA,SAZkB;AAclBC,cAAAA,SAdkB,GAcN,IAAInB,IAAI,CAACU,GAAL,CAASU,QAAb,CAAsBxB,SAAS,CAACyB,GAAhC,EAAqCzB,SAAS,CAAC0B,QAAV,CAAmBJ,SAAnB,EAA8BK,OAAnE,CAdM;AAexBlB,cAAAA,oBAAoB,CAACc,SAAD,CAApB;AAEGb,cAAAA,QAAQ,CAACkB,EAAT,CAAY,iBAAZ,EAA+B,UAAUZ,QAAV,EAAoB;AACrDT,gBAAAA,UAAU,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA,eAFE;AAIHN,cAAAA,QAAQ,CAACkB,EAAT,CAAY,cAAZ,EAA4B,UAACC,OAAD,EAAa;AACxCjB,gBAAAA,MAAM,CAACkB,QAAP,CAAgBC,MAAhB;AACA,eAFD;;AArBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAlBpB,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AA2BAhB,EAAAA,SAAS,CAAC,YAAI;AACZgB,IAAAA,kBAAkB;AACnB,GAFQ,EAEP,CAACL,OAAD,CAFO,CAAT;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,iBAAZ;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9CQN,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nfunction HomePage(props) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const provider=detectEthereumProvider();\n\n\n  const loadBlockChainData=async()=>{\n    if (provider) {\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n\n      provider.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t})\n\n\t\t\tprovider.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  useEffect(()=>{\n    loadBlockChainData\n  },[account])\n  console.log(account)\n  console.log(JuroTokenContract)\n  return (\n    <div>\n      <Jumbotron></Jumbotron>\n      <Item />\n      <FooterPage></FooterPage>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}