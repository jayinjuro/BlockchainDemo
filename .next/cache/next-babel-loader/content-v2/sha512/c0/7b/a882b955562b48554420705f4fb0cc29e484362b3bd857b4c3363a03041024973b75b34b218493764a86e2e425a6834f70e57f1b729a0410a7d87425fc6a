{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\index.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport CommunityList from \"../components/community/CommunityList\";\nimport { useEffect } from 'react';\nimport SendTransaction from \"../components/SendTransaction\";\nimport { injected } from '../utils/connector';\nimport { useWeb3React } from \"@web3-react/core\";\n\nfunction HomePage(props) {\n  const {\n    active,\n    library,\n    connector,\n    activate,\n    deactivate\n  } = useWeb3React();\n\n  const handleConnect = () => {\n    if (active) {\n      deactivate();\n      return;\n    }\n\n    activate(injected, error => {\n      if ('/No Ethereum provider was found on window.ethereum/'.test(error)) {\n        window.open('https://metamask.io/download.html');\n      }\n    });\n  };\n\n  async function connect() {\n    try {\n      await activate(injected);\n      localStorage.setItem(\"isWalletConnected\", true);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate();\n      localStorage.setItem(\"isWalletConnected\", false);\n    } catch (ex) {\n      console.log(ex);\n    }\n  } // useEffect(() => {\n  //   const connectWalletOnPageLoad = async () => {\n  //     if (localStorage?.getItem('isWalletConnected') === 'true') {\n  //       try {\n  //         await activate(injected)\n  //       } catch (ex) {\n  //         console.log(ex)\n  //       }\n  //     }\n  //   }\n  //   connectWalletOnPageLoad()\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      isLoggedIn: props.isAuthenticated,\n      loginClick: props.loginClick,\n      connector: handleConnect,\n      active: active,\n      click: props.click,\n      unClick: props.logout,\n      buyclick: props.buyclick,\n      account: props.account,\n      amount: props.amount,\n      uroamount: props.uroamount,\n      riskamount: props.riskamount,\n      connect: connect,\n      disconnect: disconnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      totalsupply: props.totalsupply,\n      modalClick: props.modalClick,\n      uroModalClick: props.uroModalClick,\n      riskModalClick: props.riskModalClick,\n      tokenName: props.tokenName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/index.js"],"names":["Jumbotron","FooterPage","Item","CommunityList","useEffect","SendTransaction","injected","useWeb3React","HomePage","props","active","library","connector","activate","deactivate","handleConnect","error","test","window","open","connect","localStorage","setItem","ex","console","log","disconnect","isAuthenticated","loginClick","click","logout","buyclick","account","amount","uroamount","riskamount","totalsupply","modalClick","uroModalClick","riskModalClick","tokenName"],"mappings":";;AAAA,OAAO,sCAAP;AACA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAAQC,SAAR,QAAwB,OAAxB;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,MAAuDP,YAAY,EAAzE;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,QAAGL,MAAH,EAAW;AACTI,MAAAA,UAAU;AACV;AACD;;AACDD,IAAAA,QAAQ,CAACP,QAAD,EAAWU,KAAD,IAAS;AACzB,UAAG,sDAAsDC,IAAtD,CAA2DD,KAA3D,CAAH,EAAqE;AACnEE,QAAAA,MAAM,CAACC,IAAP,CAAY,mCAAZ;AACD;AACF,KAJO,CAAR;AAKD,GAVD;;AAYA,iBAAeC,OAAf,GAAyB;AACvB,QAAI;AACF,YAAMP,QAAQ,CAACP,QAAD,CAAd;AACAe,MAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAAyC,IAAzC;AACD,KAHD,CAGE,OAAOC,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD;AACF;;AAED,iBAAeG,UAAf,GAA4B;AAC1B,QAAI;AACFZ,MAAAA,UAAU;AACVO,MAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAAyC,KAAzC;AACD,KAHD,CAGE,OAAOC,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD;AACF,GA/BsB,CAiCvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEd,KAAK,CAACkB,eAA7B;AAA8C,MAAA,UAAU,EAAElB,KAAK,CAACmB,UAAhE;AAA4E,MAAA,SAAS,EAAEb,aAAvF;AAAsG,MAAA,MAAM,EAAEL,MAA9G;AAAsH,MAAA,KAAK,EAAED,KAAK,CAACoB,KAAnI;AAA0I,MAAA,OAAO,EAAEpB,KAAK,CAACqB,MAAzJ;AAAiK,MAAA,QAAQ,EAAErB,KAAK,CAACsB,QAAjL;AAA2L,MAAA,OAAO,EAAEtB,KAAK,CAACuB,OAA1M;AAAmN,MAAA,MAAM,EAAEvB,KAAK,CAACwB,MAAjO;AAAyO,MAAA,SAAS,EAAExB,KAAK,CAACyB,SAA1P;AAAqQ,MAAA,UAAU,EAAEzB,KAAK,CAAC0B,UAAvR;AAAmS,MAAA,OAAO,EAAEf,OAA5S;AAAqT,MAAA,UAAU,EAAEM;AAAjU;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEjB,KAAK,CAAC2B,WAAzB;AAAsC,MAAA,UAAU,EAAE3B,KAAK,CAAC4B,UAAxD;AAAoE,MAAA,aAAa,EAAE5B,KAAK,CAAC6B,aAAzF;AAAwG,MAAA,cAAc,EAAE7B,KAAK,CAAC8B,cAA9H;AAA8I,MAAA,SAAS,EAAE9B,KAAK,CAAC+B;AAA/J;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAGD,eAAehC,QAAf","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport CommunityList from \"../components/community/CommunityList\";\nimport {useEffect} from 'react'\n\nimport SendTransaction from \"../components/SendTransaction\";\nimport {injected} from '../utils/connector';\nimport {useWeb3React} from \"@web3-react/core\"\n\n\nfunction HomePage(props) {\n  const { active, library, connector, activate, deactivate } = useWeb3React()\n\n  const handleConnect = () => {\n    if(active) {\n      deactivate();\n      return;\n    }\n    activate(injected,(error)=>{\n      if('/No Ethereum provider was found on window.ethereum/'.test(error)){\n        window.open('https://metamask.io/download.html');\n      }\n    });\n  }\n\n  async function connect() {\n    try {\n      await activate(injected)\n      localStorage.setItem(\"isWalletConnected\",true)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate()\n      localStorage.setItem(\"isWalletConnected\",false)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  // useEffect(() => {\n  //   const connectWalletOnPageLoad = async () => {\n  //     if (localStorage?.getItem('isWalletConnected') === 'true') {\n  //       try {\n  //         await activate(injected)\n  //       } catch (ex) {\n  //         console.log(ex)\n  //       }\n  //     }\n  //   }\n  //   connectWalletOnPageLoad()\n  // }, [])\n\n  return (\n    <div>\n      \n      <Jumbotron isLoggedIn={props.isAuthenticated} loginClick={props.loginClick} connector={handleConnect} active={active} click={props.click} unClick={props.logout} buyclick={props.buyclick} account={props.account} amount={props.amount} uroamount={props.uroamount} riskamount={props.riskamount} connect={connect} disconnect={disconnect}></Jumbotron>\n      <Item totalsupply={props.totalsupply} modalClick={props.modalClick} uroModalClick={props.uroModalClick} riskModalClick={props.riskModalClick} tokenName={props.tokenName}/>\n      <FooterPage></FooterPage>\n    </div>\n  );\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}