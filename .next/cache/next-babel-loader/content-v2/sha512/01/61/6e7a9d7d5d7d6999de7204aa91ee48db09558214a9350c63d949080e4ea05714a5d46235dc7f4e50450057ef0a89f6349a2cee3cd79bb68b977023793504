{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/layout/Layout\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport MyModal from '../components/layout/MyModal';\nimport Login from \"../components/Login/Login\";\nimport CreateAccount from \"../components/Login/CreateAccount\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState(null);\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(0);\n  const {\n    0: JuroTokenContract,\n    1: setJuroTokenContract\n  } = useState(null);\n  const tokenOwner = '0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed';\n  const {\n    0: totalToken,\n    1: setTotalToken\n  } = useState(0);\n  const {\n    0: modalShow,\n    1: setModalShow\n  } = useState(false);\n  const {\n    0: tokenName,\n    1: setTokenName\n  } = useState(\"\");\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    0: loginShow,\n    1: setLoginShow\n  } = useState(false);\n  const {\n    0: createShow,\n    1: setCreateShow\n  } = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n    setLoginShow(false);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  function getLibrary(provider) {\n    return new Web3(provider);\n  }\n\n  const loadBlockChainData = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n      const web3 = new Web3(window.ethereum);\n      setWeb3(web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId);\n      const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n      setJuroTokenContract(juroToken);\n      console.log(JuroTokenContract);\n      window.ethereum.on('accountsChanged', function (accounts) {\n        setAccount(accounts[0]);\n        console.log(account);\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const loadTokenAmountData = async () => {\n    if (account && JuroTokenContract) {\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      console.log(amount);\n    }\n  };\n\n  const totalSupplyData = async () => {\n    const web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const networkId = await web3.eth.net.getId();\n    const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n    setJuroTokenContract(juroToken);\n\n    if (JuroTokenContract) {\n      const totalSupply = await JuroTokenContract.methods.totalSupply().call();\n      setTotalToken(totalSupply);\n      console.log(totalToken);\n    }\n  };\n\n  const getTokenName = async () => {\n    if (JuroTokenContract) {\n      const tokName = await JuroTokenContract.methods.name().call();\n      setTokenName(tokName);\n    }\n  };\n\n  useEffect(() => {\n    totalSupplyData(), getTokenName();\n  }, []);\n  useEffect(() => {\n    loadBlockChainData(), loadTokenAmountData(), getTokenName(), totalSupplyData();\n  }, [account]);\n  useEffect(() => {\n    loadTokenAmountData();\n  }, [account, amount]);\n  useEffect(() => {\n    totalSupplyData();\n  }, [totalToken]);\n\n  const connectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      setAccount(accounts[0]);\n    }\n  };\n\n  const disconnectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [{\n          eth_accounts: {}\n        }]\n      }).then(() => ethereum.request({\n        method: 'eth_requestAccounts'\n      }));\n      setAccount(accounts[0]);\n    }\n  };\n\n  const buyHandler = async () => {\n    try {\n      console.log(account);\n      const getToken = await JuroTokenContract.methods.getToken().send({\n        from: account,\n        value: '1000000000000000'\n      });\n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call();\n      setAmount(tokenAmount);\n      console.log(getToken);\n    } catch (error) {\n      window.alert('Error occurred when buying');\n    }\n  };\n\n  function modalShowHandler() {\n    setModalShow(true);\n  }\n\n  function modalHideHandler() {\n    setModalShow(false);\n  }\n\n  function loginShowHandler() {\n    setLoginShow(true);\n  }\n\n  function logoutShowHandler() {\n    setLoginShow(false);\n  }\n\n  function createAccountHandler() {\n    setCreateShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      createClick: createAccountHandler,\n      loginClick: loginShowHandler,\n      logoutClick: logoutShowHandler,\n      account: account,\n      login: connectHandler,\n      logout: disconnectHandler,\n      isAuthenticated: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n        amountChange: setAmount,\n        account: account,\n        amount: amount,\n        click: connectHandler,\n        buyclick: buyHandler,\n        contract: JuroTokenContract,\n        logout: disconnectHandler,\n        totalsupply: totalToken,\n        onHide: modalHideHandler,\n        modalClick: modalShowHandler,\n        tokenName: tokenName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      totalsupply: totalToken,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      show: loginShow,\n      onHide: () => setLoginShow(false),\n      isLoggedIn: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CreateAccount, {\n      show: createShow,\n      onHide: () => setCreateShow(false),\n      onCreate: createAccountHandler,\n      createChange: setCreateShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/_app.js"],"names":["Layout","React","useState","useEffect","useCallback","Web3","JuroToken","Web3ReactProvider","MyModal","Login","CreateAccount","MyApp","Component","pageProps","web3","setWeb3","account","setAccount","amount","setAmount","JuroTokenContract","setJuroTokenContract","tokenOwner","totalToken","setTotalToken","modalShow","setModalShow","tokenName","setTokenName","isLoggedIn","setIsLoggedIn","loginShow","setLoginShow","createShow","setCreateShow","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","getLibrary","provider","loadBlockChainData","window","ethereum","accounts","eth","getAccounts","console","log","length","networkId","net","getId","juroToken","Contract","abi","networks","address","on","chainId","location","reload","loadTokenAmountData","tokenAmount","methods","balanceOf","call","totalSupplyData","totalSupply","getTokenName","tokName","name","connectHandler","request","method","disconnectHandler","params","eth_accounts","then","buyHandler","getToken","send","from","value","error","alert","modalShowHandler","modalHideHandler","loginShowHandler","logoutShowHandler","createAccountHandler"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout/Layout\";\nimport React,{ useState, useEffect,useCallback } from \"react\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport MyModal from '../components/layout/MyModal';\nimport Login from \"../components/Login/Login\";\nimport CreateAccount from \"../components/Login/CreateAccount\";\n\n\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n\tconst [amount, setAmount] = useState(0)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const tokenOwner='0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed'\n  const [totalToken, setTotalToken]=useState(0)\n  const [modalShow, setModalShow] = useState(false);\n  const [tokenName,setTokenName]=useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginShow, setLoginShow]=useState(false);\n  const [createShow, setCreateShow]=useState(false);\n\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n    setLoginShow(false);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  function getLibrary(provider) {\n    return new Web3(provider)\n  }\n\n \n\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum!=='undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n      console.log(networkId)\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n      console.log(JuroTokenContract)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n        console.log(account)\n\t\t\t})\n      window.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  const loadTokenAmountData=async()=>{\n    if (account&&JuroTokenContract){\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n      console.log(amount)\n\n    }\n  }\n  const totalSupplyData=async()=>{\n    const web3 = new Web3(window.ethereum)\n    setWeb3(web3)\n    const networkId = await web3.eth.net.getId()\n    const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n    setJuroTokenContract(juroToken)\n    if (JuroTokenContract){\n      const totalSupply=await JuroTokenContract.methods.totalSupply().call()\n      setTotalToken(totalSupply);\n      console.log(totalToken)\n      }\n    }\n\n    const getTokenName=async()=>{\n      if (JuroTokenContract){\n        const tokName=await JuroTokenContract.methods.name().call()\n        setTokenName(tokName);\n      }\n    }\n\n  useEffect(()=>{\n    totalSupplyData(),getTokenName()\n  },[])\n\n\n  useEffect(()=>{\n    loadBlockChainData(),loadTokenAmountData(),getTokenName(),totalSupplyData()\n  },[account])\n\n\n  useEffect(()=>{\n    loadTokenAmountData()\n  },[account,amount])\n\n  useEffect(()=>{\n    totalSupplyData()\n  },[totalToken])\n\n  \n  const connectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({method:'eth_requestAccounts'})\n    console.log(accounts)\n    setAccount(accounts[0])}\n  }\n\n  const disconnectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{eth_accounts: {}}]\n      \n  }).then(()=>ethereum.request({\n    method:'eth_requestAccounts'\n  }))\n\n    setAccount(accounts[0])}\n  }\n\n\n  const buyHandler = async () => {\n    try {\n      console.log(account)\n      const getToken=await JuroTokenContract.methods.getToken().send({ from:account, value:'1000000000000000'})\n      const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n\n      console.log(getToken)\n  \n\n    } catch (error) {\n      window.alert('Error occurred when buying')\n    }\n  }\n\n  function modalShowHandler(){\n    setModalShow(true);\n  }\n  function modalHideHandler(){\n    setModalShow(false);\n  }\n\n  function loginShowHandler(){\n    setLoginShow(true);}\n  function logoutShowHandler(){\n    setLoginShow(false);}\n\n  function createAccountHandler(){\n    setCreateShow(true);\n  }\n\n  \n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n    <Layout createClick={createAccountHandler} loginClick={loginShowHandler} logoutClick={logoutShowHandler} account={account} login={connectHandler} logout={disconnectHandler} isAuthenticated={isLoggedIn} onLogin={loginHandler} onLogout={logoutHandler}>\n      <Component {...pageProps}  amountChange={setAmount} account={account} amount={amount} click={connectHandler} buyclick={buyHandler} contract={JuroTokenContract} logout={disconnectHandler} totalsupply={totalToken} onHide={modalHideHandler} modalClick={modalShowHandler} tokenName={tokenName}/>\n    </Layout>\n    <MyModal show={modalShow} onHide={() => setModalShow(false)} totalsupply={totalToken} isLoggedIn={isLoggedIn}/>\n    <Login show={loginShow} onHide={() => setLoginShow(false)} isLoggedIn={isLoggedIn} onLogin={loginHandler} onLogout={logoutHandler}/>\n    <CreateAccount show={createShow} onHide={() => setCreateShow(false)}  onCreate={createAccountHandler} createChange={setCreateShow}/>\n    </Web3ReactProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}