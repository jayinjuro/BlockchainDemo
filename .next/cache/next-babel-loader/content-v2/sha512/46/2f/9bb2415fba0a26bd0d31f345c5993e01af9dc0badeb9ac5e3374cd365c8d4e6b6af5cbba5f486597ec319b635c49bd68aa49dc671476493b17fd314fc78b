{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\index.js\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport SendTransaction from \"../components/SendTransaction\";\n\nfunction HomePage(props) {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState(null);\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(0);\n  const {\n    0: JuroTokenContract,\n    1: setJuroTokenContract\n  } = useState(null);\n  const tokenOwner = '0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed';\n\n  const loadBlockChainData = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n      const web3 = new Web3(window.ethereum);\n      setWeb3(web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId);\n      const juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n      setJuroTokenContract(juroToken);\n      window.ethereum.on('accountsChanged', function (accounts) {\n        setAccount(accounts[0]);\n        console.log(account);\n      });\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload();\n      });\n    }\n  }; // const loadTokenAmountData=async()=>{\n  //   const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n  //   setAmount(tokenAmount)\n  //   console.log(amount)\n  // }\n  // useEffect(()=>{\n  //   loadBlockChainData()\n  // },[])\n\n\n  useEffect(() => {\n    loadBlockChainData();\n  }, [account]);\n  useEffect(() => {\n    loadBlockChainData();\n  }, []);\n  useEffect(() => {\n    loadTokenAmountData();\n  }, [account]);\n\n  const connectHandler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      setAccount(accounts);\n    }\n  };\n\n  const buyHandler = async () => {\n    try {\n      console.log(account);\n      const getToken = await JuroTokenContract.methods.getToken().send({\n        from: account,\n        value: '1000000000000000'\n      });\n      console.log(getToken);\n    } catch (error) {\n      window.alert('Error occurred when buying');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      click: connectHandler,\n      buyclick: buyHandler,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendTransaction, {\n      contract: JuroTokenContract,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/index.js"],"names":["useState","useEffect","Jumbotron","FooterPage","Item","Web3","JuroToken","detectEthereumProvider","SendTransaction","HomePage","props","web3","setWeb3","account","setAccount","amount","setAmount","JuroTokenContract","setJuroTokenContract","tokenOwner","loadBlockChainData","window","ethereum","accounts","eth","getAccounts","console","log","length","networkId","net","getId","juroToken","Contract","abi","networks","address","on","chainId","location","reload","loadTokenAmountData","connectHandler","request","method","buyHandler","getToken","methods","send","from","value","error","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport SendTransaction from \"../components/SendTransaction\";\n\nfunction HomePage(props) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n\tconst [amount, setAmount] = useState(0)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const tokenOwner='0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed'\n\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum!=='undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n      console.log(networkId)\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n        console.log(account)\n\t\t\t})\n      window.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  // const loadTokenAmountData=async()=>{\n  //   const tokenAmount=await JuroTokenContract.methods.balanceOf(account).call()\n  //   setAmount(tokenAmount)\n  //   console.log(amount)\n  // }\n\n  // useEffect(()=>{\n  //   loadBlockChainData()\n  // },[])\n\n  useEffect(()=>{\n    loadBlockChainData()\n  },[account])\n\n  useEffect(()=>{\n    loadBlockChainData()\n  },[])\n\n  useEffect(()=>{\n    loadTokenAmountData()\n  },[account])\n  \n  const connectHandler=async()=>{\n    if (web3){const accounts=await window.ethereum.request({method:'eth_requestAccounts'})\n    console.log(accounts)\n    setAccount(accounts)}\n  }\n\n\n  const buyHandler = async () => {\n    try {\n      console.log(account)\n      const getToken=await JuroTokenContract.methods.getToken().send({ from:account, value:'1000000000000000'})\n      console.log(getToken)\n  \n\n    } catch (error) {\n      window.alert('Error occurred when buying')\n    }\n  }\n  \n\n  return (\n    <div>\n      <Jumbotron click={connectHandler} buyclick={buyHandler} account={account}></Jumbotron>\n      <Item />\n      <SendTransaction contract={JuroTokenContract} account={account}></SendTransaction>\n      <FooterPage></FooterPage>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}