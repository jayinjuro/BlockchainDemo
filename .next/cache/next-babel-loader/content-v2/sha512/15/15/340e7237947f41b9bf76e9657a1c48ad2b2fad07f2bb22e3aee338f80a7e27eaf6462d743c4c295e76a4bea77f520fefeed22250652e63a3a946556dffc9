{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\components\\\\SendTransaction.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Button, Card, ListGroup, ListGroupItem, Col, Row, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classes from \"./SendTransaction.module.css\";\n\nfunction SendTransaction(props) {\n  _s();\n\n  var _useState = useState(),\n      enteredAddr = _useState[0],\n      setEnteredAddr = _useState[1];\n\n  var _useState2 = useState(),\n      enteredAmount = _useState2[0],\n      setEnteredAmount = _useState2[1];\n\n  var addrInputHandler = function addrInputHandler(_ref) {\n    var value = _ref.target.value;\n    setEnteredAddr(value);\n  };\n\n  var amountInputHandler = function amountInputHandler(_ref2) {\n    var value = _ref2.target.value;\n    setEnteredAmount(value);\n  };\n\n  function Transaction() {\n    return _Transaction.apply(this, arguments);\n  }\n\n  function _Transaction() {\n    _Transaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx, tokenAmount;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return props.contract.methods.transfer(enteredAddr, enteredAmount).send({\n                from: props.account\n              });\n\n            case 3:\n              tx = _context.sent;\n              _context.next = 6;\n              return tx.wait();\n\n            case 6:\n              console.log(tx);\n              _context.next = 9;\n              return props.contract.methods.balanceOf(props.account).call();\n\n            case 9:\n              tokenAmount = _context.sent;\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Something went wrong \".concat(_context.t0));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n    return _Transaction.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.SendTransaction,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: '44rem'\n      },\n      className: \"mb-5 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTokenTx\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.sendtext,\n            children: \"Send your token to other address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Account\",\n          onChange: addrInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter Amount of token you want to send\",\n          onChange: amountInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"mt-2\",\n        onClick: Transaction,\n        children: \"Send Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SendTransaction, \"+CMWsS/xRWfW6d4yPir/L4aBRjw=\");\n\n_c = SendTransaction;\nexport default SendTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTransaction\");","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/components/SendTransaction.js"],"names":["useState","useEffect","Button","Card","ListGroup","ListGroupItem","Col","Row","Form","classes","SendTransaction","props","enteredAddr","setEnteredAddr","enteredAmount","setEnteredAmount","addrInputHandler","value","target","amountInputHandler","Transaction","contract","methods","transfer","send","from","account","tx","wait","console","log","balanceOf","call","tokenAmount","width","sendtext"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport { Button, Card, ListGroup, ListGroupItem,Col,Row,Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./SendTransaction.module.css\";\r\n\r\n\r\nfunction SendTransaction(props){\r\n    const [enteredAddr,setEnteredAddr]=useState();\r\n    const [enteredAmount, setEnteredAmount]=useState();\r\n\r\n\r\n    const addrInputHandler= ({ target: { value } }) => {\r\n        setEnteredAddr(value);\r\n    }\r\n\r\n    const amountInputHandler= ({ target: { value } }) => {\r\n        setEnteredAmount(value);\r\n    }\r\n\r\n    async function Transaction(){\r\n        try{\r\n            const tx= await props.contract.methods.transfer(enteredAddr,enteredAmount).send({from:props.account})\r\n            await tx.wait()\r\n            console.log(tx)\r\n            const tokenAmount=await props.contract.methods.balanceOf(props.account).call()\r\n\r\n        } catch(err){\r\n            console.log(`Something went wrong ${err}`)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return <div className={classes.SendTransaction}>\r\n        <Form style={{ width: '44rem' }} className=\"mb-5 mt-5\">\r\n            <Form.Group controlId=\"formTokenTx\">\r\n                <Form.Label><h1 className={classes.sendtext}>Send your token to other address</h1></Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Account\" onChange={addrInputHandler}></Form.Control>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Amount of token you want to send\" onChange={amountInputHandler}></Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"dark\" className=\"mt-2\" onClick={Transaction}>Send Token</Button>\r\n        </Form>\r\n    </div>\r\n}\r\n\r\nexport default SendTransaction"]},"metadata":{},"sourceType":"module"}