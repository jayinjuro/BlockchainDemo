{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/turtl/TokenApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turtl\\\\TokenApp\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport SendTransaction from \"../components/SendTransaction\";\n\nfunction HomePage(props) {\n  _s();\n\n  var _useState = useState(null),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(null),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(0),\n      amount = _useState3[0],\n      setAmount = _useState3[1];\n\n  var _useState4 = useState(null),\n      JuroTokenContract = _useState4[0],\n      setJuroTokenContract = _useState4[1];\n\n  var tokenOwner = '0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed';\n\n  var loadBlockChainData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _web, accounts, networkId, juroToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof window.ethereum !== 'undefined')) {\n                _context.next = 16;\n                break;\n              }\n\n              // window.ethereum.request({method:'eth_requestAccounts'})\n              _web = new Web3(window.ethereum);\n              setWeb3(_web);\n              _context.next = 5;\n              return _web.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              console.log(accounts);\n\n              if (accounts.length > 0) {\n                setAccount(accounts[0]);\n              }\n\n              _context.next = 10;\n              return _web.eth.net.getId();\n\n            case 10:\n              networkId = _context.sent;\n              console.log(networkId);\n              juroToken = new _web.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address);\n              setJuroTokenContract(juroToken);\n              window.ethereum.on('accountsChanged', function (accounts) {\n                setAccount(accounts[0]);\n                console.log(account);\n              });\n              window.ethereum.on('chainChanged', function (chainId) {\n                window.location.reload();\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadBlockChainData() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // useEffect(()=>{\n  //   loadBlockChainData()\n  // },[])\n\n\n  useEffect(function () {\n    loadBlockChainData();\n  }, [account]);\n\n  var connectHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return window.ethereum.request({\n                method: 'eth_requestAccounts'\n              });\n\n            case 2:\n              accounts = _context2.sent;\n              console.log(accounts);\n              setAccount(accounts);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function connectHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var buyHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var getToken, tokenAmount;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log(account);\n              _context3.next = 4;\n              return JuroTokenContract.methods.getToken().send({\n                from: account,\n                value: '1000000000000000'\n              });\n\n            case 4:\n              getToken = _context3.sent;\n              console.log(getToken);\n              _context3.next = 8;\n              return JuroTokenContract.methods.balanceOf(account).call();\n\n            case 8:\n              tokenAmount = _context3.sent;\n              setAmount(tokenAmount);\n              console.log(amount);\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              window.alert('Error occurred when buying');\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 13]]);\n    }));\n\n    return function buyHandler() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      click: connectHandler,\n      buyclick: buyHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendTransaction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"plASOA8Gq4Lb2RgWTgLTLLJmRvI=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/turtl/TokenApp/pages/index.js"],"names":["useState","useEffect","Jumbotron","FooterPage","Item","Web3","JuroToken","detectEthereumProvider","SendTransaction","HomePage","props","web3","setWeb3","account","setAccount","amount","setAmount","JuroTokenContract","setJuroTokenContract","tokenOwner","loadBlockChainData","window","ethereum","eth","getAccounts","accounts","console","log","length","net","getId","networkId","juroToken","Contract","abi","networks","address","on","chainId","location","reload","connectHandler","request","method","buyHandler","methods","getToken","send","from","value","balanceOf","call","tokenAmount","alert"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,kBACCV,QAAQ,CAAC,IAAD,CADT;AAAA,MAChBW,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEMZ,QAAQ,CAAC,IAAD,CAFd;AAAA,MAEjBa,OAFiB;AAAA,MAERC,UAFQ;;AAAA,mBAGId,QAAQ,CAAC,CAAD,CAHZ;AAAA,MAGjBe,MAHiB;AAAA,MAGTC,SAHS;;AAAA,mBAI2BhB,QAAQ,CAAC,IAAD,CAJnC;AAAA,MAIhBiB,iBAJgB;AAAA,MAIGC,oBAJH;;AAKvB,MAAMC,UAAU,GAAC,4CAAjB;;AAGA,MAAMC,kBAAkB;AAAA,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACnB,OAAOC,MAAM,CAACC,QAAd,KAAyB,WADN;AAAA;AAAA;AAAA;;AAErB;AACGX,cAAAA,IAHkB,GAGX,IAAIN,IAAJ,CAASgB,MAAM,CAACC,QAAhB,CAHW;AAIxBV,cAAAA,OAAO,CAACD,IAAD,CAAP;AAJwB;AAAA,qBAMDA,IAAI,CAACY,GAAL,CAASC,WAAT,EANC;;AAAA;AAMlBC,cAAAA,QANkB;AAOrBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEH,kBAAIA,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACxBd,gBAAAA,UAAU,CAACW,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA;;AAXuB;AAAA,qBAaAd,IAAI,CAACY,GAAL,CAASM,GAAT,CAAaC,KAAb,EAbA;;AAAA;AAalBC,cAAAA,SAbkB;AAcrBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AAEGC,cAAAA,SAhBkB,GAgBN,IAAIrB,IAAI,CAACY,GAAL,CAASU,QAAb,CAAsB3B,SAAS,CAAC4B,GAAhC,EAAqC5B,SAAS,CAAC6B,QAAV,CAAmBJ,SAAnB,EAA8BK,OAAnE,CAhBM;AAiBxBlB,cAAAA,oBAAoB,CAACc,SAAD,CAApB;AAEGX,cAAAA,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,iBAAnB,EAAsC,UAAUZ,QAAV,EAAoB;AAC5DX,gBAAAA,UAAU,CAACW,QAAQ,CAAC,CAAD,CAAT,CAAV;AACIC,gBAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACJ,eAHE;AAIAQ,cAAAA,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,cAAnB,EAAmC,UAACC,OAAD,EAAa;AAClDjB,gBAAAA,MAAM,CAACkB,QAAP,CAAgBC,MAAhB;AACA,eAFE;;AAvBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAlBpB,kBAAkB;AAAA;AAAA;AAAA,KAAxB,CARuB,CAqCvB;AACA;AACA;;;AAEAnB,EAAAA,SAAS,CAAC,YAAI;AACZmB,IAAAA,kBAAkB;AACnB,GAFQ,EAEP,CAACP,OAAD,CAFO,CAAT;;AAIA,MAAM4B,cAAc;AAAA,yEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEpB,MAAM,CAACC,QAAP,CAAgBoB,OAAhB,CAAwB;AAACC,gBAAAA,MAAM,EAAC;AAAR,eAAxB,CADF;;AAAA;AACblB,cAAAA,QADa;AAEnBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAX,cAAAA,UAAU,CAACW,QAAD,CAAV;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAdgB,cAAc;AAAA;AAAA;AAAA,KAApB;;AAOA,MAAMG,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEflB,cAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAFe;AAAA,qBAGMI,iBAAiB,CAAC4B,OAAlB,CAA0BC,QAA1B,GAAqCC,IAArC,CAA0C;AAAEC,gBAAAA,IAAI,EAACnC,OAAP;AAAgBoC,gBAAAA,KAAK,EAAC;AAAtB,eAA1C,CAHN;;AAAA;AAGTH,cAAAA,QAHS;AAIfpB,cAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AAJe;AAAA,qBAMW7B,iBAAiB,CAAC4B,OAAlB,CAA0BK,SAA1B,CAAoCrC,OAApC,EAA6CsC,IAA7C,EANX;;AAAA;AAMTC,cAAAA,WANS;AAOfpC,cAAAA,SAAS,CAACoC,WAAD,CAAT;AACA1B,cAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AARe;AAAA;;AAAA;AAAA;AAAA;AAWfM,cAAAA,MAAM,CAACgC,KAAP,CAAa,4BAAb;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVT,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAgBA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH,cAAlB;AAAkC,MAAA,QAAQ,EAAEG;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5EQnC,Q;;KAAAA,Q;AA8ET,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"../components/layout/Jumbotron\";\nimport FooterPage from \"../components/layout/Footer\";\nimport Item from \"../components/Item\";\nimport Web3 from 'web3';\nimport JuroToken from '../build/contracts/JuroToken.json';\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport SendTransaction from \"../components/SendTransaction\";\n\nfunction HomePage(props) {\n  const [web3, setWeb3] = useState(null)\n\tconst [account, setAccount] = useState(null)\n\tconst [amount, setAmount] = useState(0)\n  const [JuroTokenContract, setJuroTokenContract] = useState(null)\n  const tokenOwner='0x5b1030dcd0af8b77b83e1b52e01864a79bed32ed'\n\n\n  const loadBlockChainData=async()=>{\n    if (typeof window.ethereum!=='undefined') {\n      // window.ethereum.request({method:'eth_requestAccounts'})\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t}\n\n\t\t\tconst networkId = await web3.eth.net.getId()\n      console.log(networkId)\n\n\t\t\tconst juroToken = new web3.eth.Contract(JuroToken.abi, JuroToken.networks[networkId].address)\n\t\t\tsetJuroTokenContract(juroToken)\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n        console.log(account)\n\t\t\t})\n      window.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n    }\n  }\n\n  // useEffect(()=>{\n  //   loadBlockChainData()\n  // },[])\n\n  useEffect(()=>{\n    loadBlockChainData()\n  },[account])\n  \n  const connectHandler=async()=>{\n    const accounts=await window.ethereum.request({method:'eth_requestAccounts'})\n    console.log(accounts)\n    setAccount(accounts)\n  }\n\n\n  const buyHandler = async () => {\n    try {\n      console.log(account)\n      const getToken=await JuroTokenContract.methods.getToken().send({ from:account, value:'1000000000000000'})\n      console.log(getToken)\n  \n      const tokenAmount = await JuroTokenContract.methods.balanceOf(account).call()\n      setAmount(tokenAmount)\n      console.log(amount)\n\n    } catch (error) {\n      window.alert('Error occurred when buying')\n    }\n  }\n  \n\n  return (\n    <div>\n      <Jumbotron click={connectHandler} buyclick={buyHandler}></Jumbotron>\n      <Item />\n      <SendTransaction></SendTransaction>\n      <FooterPage></FooterPage>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}